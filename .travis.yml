#########################
# project configuration #
#########################

# C++ project
language: cpp

dist: trusty
sudo: required

################
# build matrix #
################

matrix:
  include:

  # clang sanitizer
  - os: osx
    osx_image: xcode9.4
    compiler: clang
    env:
      - CMAKE_OPTIONS=-DNETKET_Sanitizer=ON

  - os: osx
    osx_image: xcode8.3

  - os: osx
    osx_image: xcode9.4

  - os: linux
    compiler: gcc
    env:
      - COMPILER="CC=gcc-5 && CXX=g++-5"
      - CMAKE_OPTIONS=-DUSE_LAPACK=ON
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5','mpich','libmpich-dev', 'libboost-dev',
                   'liblapack3','libblas-dev', 'liblapack-dev','liblapacke-dev']

  - os: linux
    compiler: gcc
    env:
      - COMPILER="CC=gcc-6 && CXX=g++-6"
      - CMAKE_OPTIONS=-DUSE_LAPACK=ON
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-6','mpich','libmpich-dev', 'liblapack3',
                   'libblas-dev', 'liblapack-dev','liblapacke-dev']

  - os: linux
    compiler: clang
    env:
      - COMPILER="CC=clang-5.0 && CXX=clang++-5.0"
      - CXXFLAGS=-std=c++1z
      - CMAKE_OPTIONS=-DUSE_LAPACK=ON
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-5.0']
        packages: ['g++-6', 'clang-5.0', 'mpich','libmpich-dev',
                   'liblapack3','libblas-dev', 'liblapack-dev','liblapacke-dev']


cache:
  apt: true
  directories:
    - $HOME/Library/Caches/Homebrew


################
# build script #
################

script:
  # get CMake and Mpi (only for systems with brew - macOS)
  - |
     if [[ (-x $(which brew)) ]]; then
       brew install cmake
       brew install openmpi
       brew install --without-python boost
       brew install lapack
       brew upgrade cmake
       brew upgrade openmpi
       cmake --version
     fi
  # make sure CC and CXX are correctly set
  - if [[ "${COMPILER}" != "" ]]; then eval ${COMPILER}; fi

  # Make build verbose
  - export VERBOSE=1

  # show OS/compiler version
  - uname -a
  - $CXX --version

  # compile and execute unit tests
  - mkdir -p build && cd build
  - cmake .. ${CMAKE_OPTIONS} -DENABLE_TESTS=ON -DCMAKE_CXX_FLAGS_RELEASE=-O3 && cmake --build . --config Release
  - ctest -C Release -V -j
  - cd ..
